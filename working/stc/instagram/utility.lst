C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE UTILITY
OBJECT MODULE PLACED IN utility.obj
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE src\utility.c OPTIMIZE(9,SPEED) BROWSE ORDER DEBUG OBJECTEXTEND PRINT(.\ut
                    -ility.lst) OBJECT(utility.obj)

stmt level    source

   1          //----------------------------------------------------------------
   2          //----------------------------------------------------------------
   3          // Module name: User Utility
   4          //
   5          // Copyright 2008 Fong Ming as an  unpublished work. 
   6          // All Rights Reserved.
   7          //
   8          // The information contained herein is confidential 
   9          // property of Company. The user, copying, transfer or 
  10          // disclosure of such information is prohibited except
  11          // by express written agreement with Company.
  12          //
  13          // First written on 2008-09-23 by Fong Ming
  14          //
  15          //----------------------------------------------------------------
  16          //----------------------------------------------------------------
  17          
  18          
  19          
  20          //----------------------------------------------------------------------------
  21          //----------------------------------------------------------------------------
  22          // Include section
  23          // Add all #includes here
  24          //----------------------------------------------------------------------------
  25          //----------------------------------------------------------------------------
  26          
  27          #include "utility.h"
  28          
  29          extern void uart_tx(unsigned char ibyte);
  30          
  31          /*
  32          //----------------------------------------------------------------------------
  33          // Function Prototype - User Library
  34          //----------------------------------------------------------------------------
  35          
  36          INT16U  u_abs(INT16S a);
  37          INT16S  u_sign(INT16S x);
  38          INT8U   u_toupper(INT8U c);
  39          INT8U   u_hex2dec(INT8U c);
  40          INT16U  u_asc2uint(INT8U len, INT8U *sptr);
  41          void    u_putch(INT8U abyte);
  42          void    u_puts( char *sptr); 
  43          void    u_putHexByte(INT8U c, INT8U t); 
  44          void    u_putHexWord(INT16U w);
  45          void    u_putDecByte(INT8U num);
  46          void    u_putDecWord(INT16U num); 
  47          void    u_Lputch(INT8U abyte);
  48          void    u_Delay(INT8U iDelay);
  49          
  50          */
  51          
  52          
  53          #if (1)
  54          //----------------------------------------------------------------------------
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 2   

  55          // Function name        : u_delay(int a)
  56          //    returns           : void
  57          //    arg1                      : none
  58          //    arg2                      : none
  59          // Created by           : Fong Ming
  60          // Date created         : 2002-03-30
  61          // Description          : return a Absolute value  
  62          //
  63          // 
  64          // Affected 
  65          // Global Variable  : none  
  66          // Modified           
  67          // Global Variable  : none
  68          // Function Called  : none
  69          //                       
  70          //                       
  71          // Assumption       : 
  72          //                    
  73          // Notes                        :
  74          //----------------------------------------------------------------------------
  75          void u_delay(unsigned int iDelay){ 
  76   1              //delay n 100us 
  77   1              unsigned int x; 
  78   1      
  79   1              while(iDelay--){ 
  80   2              x=130;          // 8MHz Clock
  81   2              while(x--); 
  82   2              } 
  83   1      } 
  84          
  85          
  86          //----------------------------------------------------------------------------
  87          // Function name        : int abs(int a)
  88          //    returns           : int
  89          //    arg1                      : int
  90          //    arg2                      : none
  91          // Created by           : Fong Ming
  92          // Date created         : 2002-03-30
  93          // Description          : return a Absolute value  
  94          //
  95          // 
  96          // Affected 
  97          // Global Variable  : none  
  98          // Modified           
  99          // Global Variable  : none
 100          // Function Called  : none
 101          //                       
 102          //                       
 103          // Assumption       : 
 104          //                    
 105          // Notes                        :
 106          //----------------------------------------------------------------------------
 107          
 108          INT16U u_abs(INT16S a)
 109          {
 110   1              if(a < 0)
 111   1                      return -a;
 112   1              return (INT16U) a;
 113   1      }
 114          
 115          //----------------------------------------------------------------------------
 116          // Function name        : INT16S sign(INT16S x)
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 3   

 117          //    returns           : 1 for Pos, -1 for Neg
 118          //    arg1                      : INT16S
 119          //    arg2                      : none
 120          // Created by           : Fong Ming
 121          // Date created         : 2002-03-30
 122          // Description          : return Sign of int
 123          //
 124          // Affected 
 125          // Global Variable  : none  
 126          // Modified           
 127          // Global Variable  : none
 128          // Function Called  : none
 129          //                       
 130          // Assumption        : 
 131          //                     
 132          // Notes                            :
 133          //----------------------------------------------------------------------------
 134          
 135          INT16S u_sign(INT16S x) 
 136          {
 137   1              if (x<0) return (-1);
 138   1              return(1);
 139   1      }
 140          
 141          
 142          //----------------------------------------------------------------------------
 143          // Function name                : static INT16U asc2uint(INT8U len, INT8U *sptr)
 144          //   returns            : A 16 bit unsigned integer
 145          //    arg1                      : len, number of alphanumeric character
 146          //                                      : to be converted.
 147          //    arg2                      : sptr, pointer that points to alphanumeric string
 148          // Created by           : Derek Tong
 149          // Date created         : 16 May 2002
 150          // Description          : Convert alphanumeric string to hex. value
 151          // Notes                                :
 152          //----------------------------------------------------------------------------
 153          INT16U u_asc2uint(INT8U len, INT8U *sptr)
 154          {
 155   1              INT8U i;
 156   1              INT16U temp;
 157   1      
 158   1              temp = u_hex2dec(*sptr++);
 159   1              for(i = 1; i < len; i++)
 160   1                      temp = temp * 0x10 + u_hex2dec(*sptr++);
 161   1              return (temp);
 162   1      }
 163          
 164          //----------------------------------------------------------------------------
 165          // Function name        : INT8U hex2dec(INT8U c) 
 166          //    returns           : INT8U
 167          //    arg1                      : INT8U
 168          //    arg2                      : none
 169          // Created by           : Fong Ming
 170          // Date created         : 2002-03-30
 171          // Description          : Convert hexadecimal ASCII char. to 
 172          //                    hexadecimal number
 173          //
 174          // Affected 
 175          // Global Variable  : none  
 176          // Modified           
 177          // Global Variable  : none
 178          // Function Called  : none
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 4   

 179          //                       
 180          // Assumption        : 
 181          //                     
 182          // Notes                         :
 183          //----------------------------------------------------------------------------
 184          
 185          INT8U u_hex2dec(INT8U c) 
 186          {
 187   1              if ((c>='0') && (c<='9')) 
 188   1          {
 189   2                      return (c-0x30);
 190   2              }else if ((c>='A') && (c<='F')) 
 191   1          {
 192   2                      return (c-'A'+10);
 193   2              }else if ((c>='a') && (c<='f')) 
 194   1          {
 195   2                      return (c-'a'+10);
 196   2              }
 197   1      
 198   1              return 0;
 199   1      }
 200          
 201          
 202          
 203          //----------------------------------------------------------------------------
 204          // Function name        : void u_putHexWord(INT16U w)
 205          //    returns           : none
 206          //    arg1                      : INT16U 
 207          //    arg2                      : none
 208          // Created by           : Fong Ming
 209          // Date created         : 2002-03-30
 210          // Description          : Print INT16Ueger number 
 211          //                     to debug UART port.
 212          //
 213          // Affected 
 214          // Global Variable  : none  
 215          // Modified           
 216          // Global Variable  : none
 217          // Function Called  : u_putHexByte
 218          //                       
 219          // Assumption       :
 220          //                     
 221          //                     
 222          // Notes                        :
 223          //----------------------------------------------------------------------------
 224          
 225          void u_putHexWord(INT16U w)
 226          {       
 227   1          u_putHexByte((INT8U) (w>>8),0);
 228   1              u_putHexByte((INT8U) (w & 0xff),0);
 229   1          u_putch(' ');
 230   1      }
 231          #endif
 232          
 233          #if false
              
              //----------------------------------------------------------------------------
              // Function name        : void u_putDecByte(INT8U c) 
              //    returns           : none
              //    arg1                      : INT8U pointer
              //    arg2                      : none
              // Created by           : Fong Ming
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 5   

              // Date created         : 2002-03-30
              // Description          : Print unsigned decimal number 
              //                     to debug UART port.
              //
              // Affected 
              // Global Variable  : none  
              // Modified           
              // Global Variable  : none
              // Function Called  : u_putch
              //                       
              //                     
              // Notes                        :
              //----------------------------------------------------------------------------
              
              
              void u_putDecByte(INT8U num)
              {
                  INT8U temp;
              
                  if(num >= 100)
                  {
                      temp=num/100;
                      u_putch(temp+'0');
                      temp=temp*100;
                      num-=temp;
                  }
                  else
                  {
                      u_putch('0');
                  }
              
                  if(num >=10)
                  {
                      temp=num/10;
                      u_putch(temp+'0');
                      temp=temp*10;
                      num-=temp;
                  }
                  else
                  {
                      u_putch('0');
                  }
              
                  u_putch(num+'0');
              
              }
              
              //----------------------------------------------------------------------------
              // Function name        : void u_putDecWord(INT16U num) 
              //    returns           : none
              //    arg1                      : INT8U pointer
              //    arg2                      : none
              // Created by           : Fong Ming
              // Date created         : 2002-03-30
              // Description          : Print unsigned decimal number 
              //                     to debug UART port.
              //
              // Affected 
              // Global Variable  : none  
              // Modified           
              // Global Variable  : none
              // Function Called  : u_putch
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 6   

              //                       
              //                     
              // Notes                        :
              //----------------------------------------------------------------------------
              
              
              void u_putDecWord(INT16U num) 
              {
              
                  INT16U temp;
              
                  if(num >= 10000)
                  {
                      temp=num/10000;
                      u_putch(temp+'0');
                      temp=temp*10000;
                      num-=temp;
                  }
                  else
                  {
                      u_putch('0');
                  }
              
                  if(num >= 1000)
                  {
                      temp=num/1000;
                      u_putch(temp+'0');
                      temp=temp*1000;
                      num-=temp;
                  }
                  else
                  {
                      u_putch('0');
                  }
              
                  if(num >= 100)
                  {
                      temp=num/100;
                      u_putch(temp+'0');
                      temp=temp*100;
                      num-=temp;
                  }
                  else
                  {
                      u_putch('0');
                  }
              
                  if(num >=10)
                  {
                      temp=num/10;
                      u_putch(temp+'0');
                      temp=temp*10;
                      num-=temp;
                  }
                  else
                  {
                      u_putch('0');
                  }
              
                  u_putch(num+'0');
              
              
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 7   

              }
              
              #endif
 368          
 369          //----------------------------------------------------------------------------
 370          // Function name        : void u_putHexByte(INT8U c) 
 371          //    returns           : none
 372          //    arg1                      : INT8U pointer
 373          //    arg2                      : none
 374          // Created by           : Fong Ming
 375          // Date created         : 2002-03-30
 376          // Description          : Print unsigned hexadecmial number 
 377          //                     to debug UART port.
 378          //
 379          // Affected 
 380          // Global Variable  : none  
 381          // Modified           
 382          // Global Variable  : none
 383          // Function Called  : u_putch
 384          //                       
 385          //                     
 386          // Notes                        :
 387          //----------------------------------------------------------------------------
 388          
 389          void u_putHexByte(INT8U c, INT8U t) 
 390          {
 391   1              static const char STR_HEX[]="0123456789ABCDEF";
 392   1              u_putch(STR_HEX[((c&0xF0)>>4) & 0x0f]);
 393   1              u_putch(STR_HEX[c&0x0F]);
 394   1      
 395   1          if (t != 0)
 396   1              u_putch(t);
 397   1      
 398   1      }
 399          
 400          
 401          
 402          
 403          
 404          //----------------------------------------------------------------------------
 405          // Function name    : void putch(INT8U abyte) 
 406          //    returns           : none
 407          //    arg1                      : INT8U
 408          //    arg2                      : none
 409          // Created by           : Fong Ming
 410          // Date created         : 2002-03-30
 411          // Description          : Send the specified data byte to UART
 412          //
 413          // Affected 
 414          // Global Variable  : none  
 415          // Modified           
 416          // Global Variable  : none
 417          // Function Called  : none
 418          //                       
 419          // Assumption       : TXREG = UART Transmission Registor
 420          //                     
 421          // Notes                        :
 422          //----------------------------------------------------------------------------
 423          //  AVR UART
 424          //      UCSRB |= 0x08; // enable transmitter
 425          //    while (!(UCSRA & 0x20))
 426          //      {
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 8   

 427          //              // do nothing
 428          //      }
 429          //      
 430          //    UDR = abyte;
 431          
 432          void u_putch(INT8U abyte) 
 433          {
 434   1              uart_tx(abyte);
 435   1      
 436   1      }
 437          //----------------------------------------------------------------------------
 438          // Function name        : void puts(const char //sptr) 
 439          //    returns           : none
 440          //    arg1                      : INT8U pointer
 441          //    arg2                      : none
 442          // Created by           : Fong Ming
 443          // Date created         : 2002-03-30
 444          // Description          : Put string to UART. String must 
 445          //                    terminated by null character
 446          //
 447          // Affected 
 448          // Global Variable  : none  
 449          // Modified           
 450          // Global Variable  : none
 451          // Function Called  : u_putch
 452          //                       
 453          // Assumption       :   
 454          //                     
 455          // Notes                        :
 456          //----------------------------------------------------------------------------
 457          
 458          void u_puts( INT8U *sptr) 
 459          {
 460   1              while(*sptr != 0) 
 461   1              u_putch(*sptr++);
 462   1      }
 463          
 464          #if false 
              INT8U u_toupper(INT8U c)
              
              {
              
                      if ((c>='a') && (c<='z'))               //convert lower case to upper case
                              return(c-0x20);
                      else
                              return(c);
              
              }
              
              #endif
 477          
 478          //----------------------------------------------------------------------------
 479          //  User Library END
 480          //----------------------------------------------------------------------------
 481          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    350    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V7.06   UTILITY                                                               03/21/2012 23:16:37 PAGE 9   

   DATA SIZE        =     17      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
