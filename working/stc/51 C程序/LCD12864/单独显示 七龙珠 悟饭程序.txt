/*******************************************************************************
*  LCD12864 显示七龙珠 悟饭图形                                                     *
*                                                                               *
********************************************************************************/
#include <reg52.h>
#include <intrins.h>
#define uchar unsigned char


/************* 12864LCD引脚定义 *************/
#define LCD_data  P2       //数据口
sbit LCD_RS  =  P3^5;      //寄存器选择输入 
sbit LCD_RW  =  P3^6;      //液晶读/写控制
sbit LCD_EN  =  P3^7;      //液晶使能控制
//sbit LCD_PSB =  P3^2;      //串/并方式控制
sbit LCD_RST =  P3^4;      //液晶复位端口


#define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
/*********************************************************/

/*********************************************************/
uchar code Photo1[] =


{
0xCC,0x0F,0x3F,0xF9,0xC0,0x00,0xF8,0x43,0xFF,0x1F,0xDF,0xFF,0xF7,0xFF,0xFF,0xFF,0x20,0x03,0x1F,0xF1,0xF0,0x20,0xFC,0x21,
0xFF,0x0F,0xFF,0xBF,0xFF,0xD7,0xEF,0xFF,0x70,0x38,0x04,0xF8,0x7F,0x4B,0xFF,0xB0,0xCF,0xC1,0xC6,0x9F,0xFB,0xE0,0xE7,0xFF,
0xFE,0x0F,0x00,0x01,0x7F,0x0B,0xFF,0xF2,0x00,0xE0,0x88,0x4F,0xBB,0xE0,0xF7,0xFF,0x7E,0x40,0x01,0xD8,0x9F,0xC1,0xFF,0xF9,
0xC8,0x08,0x9C,0x30,0x8F,0x90,0x7F,0xFF,0x02,0x31,0x0F,0xFF,0xC7,0xE4,0xFF,0xFF,0xFC,0x06,0x3F,0x88,0xF5,0x90,0x3F,0xFF,
0xC0,0x08,0xF7,0xFF,0xFF,0xF4,0xFF,0xFF,0xFE,0x07,0x87,0xFE,0x3E,0xFA,0x0E,0xFF,0xC0,0x00,0x7F,0xFF,0xFF,0xFE,0xFF,0xFF,
0xDF,0xEF,0xE0,0xFF,0x9F,0xFF,0xA2,0x7F,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,0x9F,0xFF,0xF8,0x3F,0xFF,0xFF,0xE0,0x7F,
0x00,0x80,0x7F,0xFF,0xFF,0xFF,0xBF,0xFF,0xBF,0xFF,0xFC,0x0F,0xFF,0xFF,0xF8,0x3F,0xFF,0xCC,0x3F,0xFF,0xFF,0xFF,0x9F,0xFF,
0x7F,0xFF,0xFF,0x01,0xFF,0xFF,0xFD,0x03,0xFF,0xC7,0x0F,0xFF,0xF8,0xFF,0xEF,0xFF,0x3F,0xFF,0xFF,0xE0,0x7F,0xFF,0xFF,0xF3,
0x7F,0xE7,0xC3,0xFF,0xF2,0xFF,0xE7,0xFF,0x01,0xFF,0xFF,0xF8,0x0F,0xFF,0xFF,0xFF,0x3F,0xF3,0xF1,0xFF,0xF9,0xFF,0xF7,0xFF,
0x03,0xFF,0xC7,0xFF,0x83,0xFD,0xFF,0xF2,0xFF,0xF2,0xDC,0x7F,0xFF,0xFF,0xFF,0xFF,0xFB,0xFC,0x0F,0xE7,0xF0,0x7F,0xFE,0x05,
0xFF,0xF9,0x6F,0x1F,0xFF,0xFF,0xFF,0xFF,0xFD,0xF8,0x3F,0xF3,0xFF,0xFB,0x91,0xED,0xFF,0xFD,0xB7,0xC7,0xFF,0xFF,0xF1,0x13,
0xE4,0xF0,0x7F,0xFF,0xFD,0xF2,0x2D,0xED,0xFC,0xFE,0xDB,0xF9,0xFF,0xFF,0x8E,0x00,0xFE,0x43,0xFF,0xFF,0xFE,0x18,0x3F,0xFD,
0xFF,0xFE,0x4D,0xFD,0xFF,0xEE,0x7E,0x1E,0x3F,0x1F,0xFF,0xFF,0xFF,0xC0,0x1F,0xBD,0x80,0x00,0xCE,0x9C,0xFF,0x81,0xEC,0x12,
0x1E,0xFF,0xFF,0xFF,0x00,0x38,0x0B,0xBA,0xDF,0xDE,0x0E,0x18,0xFE,0x19,0xE6,0x37,0x8F,0xEF,0xFF,0xFF,0xC0,0x0C,0x0F,0xBD,
0xE7,0xCF,0xF6,0x15,0x7C,0xBE,0xED,0x31,0x8F,0xF7,0xFB,0xF8,0xF8,0x08,0x0C,0x99,0x93,0xF3,0xF2,0x07,0xBE,0x3D,0xF3,0xE8,
0xEF,0xFD,0xC0,0x04,0x0C,0x08,0x0A,0x01,0x3E,0xFD,0xF9,0x62,0xB1,0x9F,0xF7,0xF0,0x8F,0xFE,0x8E,0x1C,0x86,0x18,0x75,0xFF,
0x3F,0x60,0x7F,0xB5,0xDE,0x00,0x0F,0xFF,0xFF,0xFC,0x0E,0x0E,0x06,0x0C,0x7F,0xFF,0xDF,0xBE,0x7E,0x9C,0xBF,0x80,0x07,0xFF,
0xFF,0xF8,0x00,0x00,0x06,0x14,0xFF,0xFF,0xD8,0xDF,0xBE,0x5E,0x5C,0x20,0x01,0xFF,0xF8,0x00,0x20,0x00,0x04,0x13,0xFF,0xFF,
0xEE,0x07,0xDF,0x7C,0x3D,0x88,0x00,0x7F,0xC0,0x00,0x38,0xE0,0x0C,0xA7,0xFF,0xFF,0xF7,0xFF,0xEF,0x3D,0xD9,0xC1,0x00,0x2B,
0xD0,0x00,0x21,0x00,0x08,0x3F,0xFF,0xFF,0xFB,0xDF,0xE9,0x9C,0xCF,0x64,0x80,0x5B,0xF0,0x00,0x20,0x00,0x10,0x7F,0xFF,0xFF,
0xFD,0xE7,0xFB,0x9E,0xF7,0xF2,0xF8,0x76,0x40,0x00,0x32,0x00,0x27,0xFF,0xFF,0xFF,0xF5,0xE1,0xF8,0x3F,0x7B,0x77,0x00,0x14,
0x00,0x10,0x1E,0x00,0x7F,0xFF,0xFF,0xFF,0xFA,0xBE,0xFE,0x3F,0x99,0x26,0x00,0x34,0x30,0x00,0x0C,0x01,0xFF,0xEF,0xFF,0xFF,
0xFC,0x03,0x3F,0xFF,0xCC,0xBF,0x00,0x36,0x66,0x00,0x1C,0x3F,0xFF,0xDF,0xFF,0xFF,0x1F,0xF8,0x06,0x3F,0xCE,0xDF,0x80,0x36,
0x4C,0x00,0x33,0x07,0x9F,0xFF,0xFF,0xFB,0x20,0x8F,0xFC,0xFF,0xDE,0x4F,0x82,0x3A,0x00,0x00,0xE1,0x80,0x0F,0x7F,0xFF,0xEF,
0x58,0x7F,0xFF,0xCF,0xFA,0xBF,0xC2,0x3A,0x00,0x07,0x01,0xE1,0xF0,0x07,0xFF,0xEF,0xA7,0x00,0x1F,0x0F,0xCD,0x93,0x84,0x2A,
0x0F,0xE0,0x00,0xFC,0x20,0x03,0xBF,0x23,0xBB,0xFF,0xE7,0xCF,0xCB,0x98,0x08,0x26,0x00,0x00,0x00,0x00,0x0C,0x01,0xA0,0xC7,
0xDC,0xFF,0xC7,0xEF,0x9F,0xD8,0x10,0x13,0x08,0x00,0x00,0x00,0x03,0x00,0x2F,0xC7,0xCF,0x3E,0x7D,0xEF,0x7F,0xD0,0x40,0x0B,
0x70,0x00,0x00,0x03,0x00,0x00,0x3F,0xE7,0xF1,0xBF,0x30,0x66,0xFB,0xFF,0x10,0x49,0xF8,0x00,0x00,0x1D,0xF0,0x00,0x3B,0xE5,
0xFD,0xFE,0xEF,0xB0,0xF3,0xFE,0x34,0xE1,0xF0,0x02,0x80,0x7F,0xB0,0x00,0x3F,0xE7,0xFE,0xC0,0xD7,0x91,0xE7,0xFE,0x5F,0x7F,
0xDF,0xFC,0x00,0x27,0x88,0x00,0x23,0xF7,0xFF,0x7D,0x9E,0x0F,0xEF,0xFC,0xFF,0xBC,0x0F,0xF3,0x06,0x07,0x98,0x11,0x81,0xF7,
0xFF,0xBD,0x3C,0x0F,0xEF,0xF9,0xFF,0xC8,0x07,0xFE,0xFF,0x9F,0xF6,0x7B,0xFC,0xE7,0xFF,0xC4,0xF8,0x3F,0xEF,0xFF,0xFF,0xF1,
0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x27,0xFF,0xF9,0x99,0xFF,0xCF,0xFB,0xFF,0xFD,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x27,
0xFF,0xF3,0xE7,0xFF,0xAF,0xF7,0xFF,0xFE,0x09,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xA7,0xFF,0xE3,0xCF,0xFF,0x4F,0xE7,0xFF,0xEE,
0x8E,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xA7,0x7F,0xC0,0x3F,0xFF,0x5B,0xFD,0xFF,0xFE,0x34,0xFF,0xFF,0xFF,0xFF,0xFF,0xDF,0x87,
0x3F,0xFF,0xFF,0xF0,0x57,0xFF,0xFF,0xFF,0x65,0xFF,0xFF,0xFF,0xFF,0xFE,0x3F,0xC7,0x3F,0xFF,0xFF,0xE7,0xEF,0xFF,0xFF,0xFF,
0x83,0xFF,0xFF,0xE5,0x9E,0xC0,0xFF,0xC7,0x9F,0xFF,0xFF,0xEF,0xE7,0xCF,0xFF,0xFF,0xEF,0xFF,0xFF,0x99,0xF9,0x8B,0xFF,0xE7,
0x8B,0xFF,0xFF,0xFF,0xE3,0x0F,0xFD,0xFF,0xFF,0xFC,0xFC,0x38,0xF3,0xBF,0xFE,0xFB,0xE5,0xC0,0xFF,0xC2,0x33,0xEF,0xFE,0xFF,
0xFF,0xF9,0xF1,0xFB,0x0F,0xFF,0xFE,0xDB,0xF1,0x18,0xF8,0x1F,0x17,0xE3,0xFF,0xFF,0xFF,0xB6,0x47,0xFF,0x9C,0x45,0x47,0x7B,
0xF8,0x2B,0x00,0xFF,0x01,0x73,0xFF,0x8F,0xFF,0x7C,0x1F,0xFF,0xBD,0x56,0x67,0xBB,0xF8,0x56,0x07,0xFF,0x3F,0xF0,0x7C,0x2F,
0x7C,0xFC,0x7F,0xFF,0x79,0x44,0x1F,0xB9,0xFD,0x8F,0xC3,0xFE,0x3F,0xFC,0xE1,0xC0,0x73,0xF8,0xFF,0xFF,0xFC,0x1E,0x6F,0xD9,
0xFE,0x07,0x8B,0xFE,0x7F,0xFD,0xCF,0xE6,0x03,0xF0,0xFF,0xFF,0xFF,0xED,0x77,0x59,0xFF,0xE3,0x57,0xFF,0x7F,0xF1,0x3F,0xDF,
0x8F,0xF1,0xFF,0xFF,0xFF,0xFF,0xFF,0xC1,0xFF,0xFE,0x37,0xFF,0xFF,0xF0,0xFF,0xFF,0xBD,0xC6,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,
0xFF,0xFF,0xFF,0xFF,0xFF,0xC3,0xFF,0xFF,0x7F,0x31,0xFF,0xFF,0xFF,0xFF,0xFF,0xC7,

};


/*******************************************************************/
/*                                                                 */
/*  延时函数                                                       */
/*                                                                 */
/*******************************************************************/
void delay(int ms)
{
    while(ms--)
	{
      uchar i;
	  for(i=0;i<150;i++)  
	   {
	    _nop_();			   
		_nop_();
		_nop_();
		_nop_();
	   }
	}
}	
/*******************************************************************/
/*                                                                 */
/*  延时函数                                                       */
/*                                                                 */
/*******************************************************************/
void delay1(int ms)
{
    while(ms--)
	{
      uchar y;
	  for(y=0;y<100;y++) ; 
	}
}			
/*******************************************************************/
/*                                                                 */
/*检查LCD忙状态                                                    */
/*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
/*                                                                 */
/*******************************************************************/
bit lcd_busy()
 {                          
    bit result;
    LCD_RS = 0;
    LCD_RW = 1;
    LCD_EN = 1;
    delayNOP();
    result = (bit)(P2&0x80);
    LCD_EN = 0;
    return(result); 
 }
/*******************************************************************/
/*                                                                 */
/*写指令数据到LCD                                                  */
/*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
/*                                                                 */
/*******************************************************************/
void lcd_wcmd(uchar cmd)
{                          
   while(lcd_busy());
    LCD_RS = 0;
    LCD_RW = 0;
    LCD_EN = 0;
    _nop_();
    _nop_(); 
    P2 = cmd;
    delayNOP();
    LCD_EN = 1;
    delayNOP();
    LCD_EN = 0;  
}
/*******************************************************************/
/*                                                                 */
/*写显示数据到LCD                                                  */
/*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
/*                                                                 */
/*******************************************************************/
void lcd_wdat(uchar dat)
{                          
   while(lcd_busy());
    LCD_RS = 1;
    LCD_RW = 0;
    LCD_EN = 0;
    P2 = dat;
    delayNOP();
    LCD_EN = 1;
    delayNOP();
    LCD_EN = 0; 
}
/*******************************************************************/
/*                                                                 */
/*  LCD初始化设定                                                  */
/*                                                                 */
/*******************************************************************/
void lcd_init()
{ 
//    LCD_PSB = 1;         //并口方式
    
	LCD_RST = 0;		 //液晶复位
    delay(3);                   
    LCD_RST = 1;      
    delay(3);
    
    lcd_wcmd(0x34);      //扩充指令操作
    delay(5);
    lcd_wcmd(0x30);      //基本指令操作
    delay(5);
    lcd_wcmd(0x0C);      //显示开，关光标
    delay(5);
    lcd_wcmd(0x01);      //清除LCD的显示内容
    delay(5);
}





/*********************************************************
*                                                        *
* 图形显示                                               *
*                                                        *
*********************************************************/
void photodisplay(uchar *bmp)	
{ 
  uchar i,j;

  lcd_wcmd(0x34);        //写数据时,关闭图形显示

  for(i=0;i<32;i++)
  {
    lcd_wcmd(0x80+i);    //先写入水平坐标值
    lcd_wcmd(0x80);      //写入垂直坐标值
    for(j=0;j<16;j++)   //再写入两个8位元的数据    
    lcd_wdat(*bmp++);     
    delay1(1);
  }

  for(i=0;i<32;i++)
  { 
    lcd_wcmd(0x80+i);
    lcd_wcmd(0x88);
    for(j=0;j<16;j++)         
	lcd_wdat(*bmp++);    
	delay1(1);
  }
  lcd_wcmd(0x36);       //写完数据,开图形显示 
}


/*********************************************************
*                                                        *
* 主函数                                                 *
*                                                        *
*********************************************************/
void main()
{
  
     lcd_init();                 //初始化LCD
  

     photodisplay(Photo1);     //显示图片1
     delay(20000);    
              
  
   
}
/*********************************************************/




