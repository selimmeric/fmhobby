/*******************************************************************************
*  LCD12864 显示多拉A梦图形                                                     *
*                                                                               *
********************************************************************************/
#include <reg52.h>
#include <intrins.h>
#define uchar unsigned char


/************* 12864LCD引脚定义 *************/
#define LCD_data  P2       //数据口
sbit LCD_RS  =  P3^5;      //寄存器选择输入 
sbit LCD_RW  =  P3^6;      //液晶读/写控制
sbit LCD_EN  =  P3^7;      //液晶使能控制
//sbit LCD_PSB =  P3^2;      //串/并方式控制
sbit LCD_RST =  P3^4;      //液晶复位端口


#define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
/*********************************************************/

/*********************************************************/
uchar code Photo1[] =


{
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x38,0x07,0xC0,0xE0,0x00,0x3F,0x00,0x06,
0x01,0x40,0x18,0x38,0x00,0x00,0x00,0x00,0x00,0x05,0x01,0xF0,0x00,0x3D,0x80,0x02,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,
0x04,0x85,0xE0,0x78,0x00,0x1C,0x1E,0x1E,0x05,0x00,0x80,0x07,0x04,0x07,0x83,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x0C,0x00,0x00,0x00,0x04,0x1E,0x26,0x09,0x41,0xC0,0xA0,0x33,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x03,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xF8,0x00,0x00,0x3F,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x0F,0xFF,0xF0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x30,0x00,0x03,0xFF,0xC0,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x00,0xFC,0x7E,0x01,0xFF,0xC1,0xFF,0xFF,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x01,0xFE,0x7E,0x00,0xFF,0xC1,
0xFF,0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x01,0xFE,0xFF,0x00,0x7F,0xD3,0xFF,0xFF,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xF8,0x01,0xE6,0xC7,0x00,0x3F,0xC2,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x01,0xDE,0xF7,0x00,0x1F,0xE2,
0xFF,0xFF,0x40,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x1E,0xFC,0x7E,0xE0,0x1F,0xE0,0xFF,0xFF,0x5F,0x7F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xE0,0x62,0x70,0x01,0x8C,0x1F,0xE8,0xFF,0xFE,0xDF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE1,0xFC,0xF0,0x1C,0x7E,0x0F,0xE8,
0xFF,0xFC,0xDF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xFF,0xF0,0x1B,0xFF,0x0F,0x80,0xFF,0xFD,0xC0,0x7F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xE2,0x03,0xF8,0x3F,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0xFE,0x7E,0xFC,0x00,0x0F,0x80,
0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0xFF,0xFE,0xFF,0xFF,0x8F,0x00,0xFF,0xFF,0x36,0x7F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xE7,0x9F,0xFE,0xFF,0xFB,0x8F,0x00,0xFF,0xFF,0x94,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0xC1,0xFE,0xFC,0xF3,0x9F,0x00,
0xFF,0xFF,0x95,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0x27,0xFE,0xFF,0x87,0x9F,0x3F,0xFF,0xFC,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xF5,0xF9,0xFE,0xFF,0xC1,0x9F,0x7F,0xFF,0xFF,0xDB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,0xFE,0x7E,0xFE,0x07,0x3F,0x7F,
0xFF,0xFF,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0xF9,0xFF,0x82,0x40,0x03,0x7F,0x7F,0xFF,0xFF,0xBB,0x9F,0xFF,0xFF,0xFF,0xFF,
0x00,0x7C,0xFF,0xFF,0xF8,0x00,0x10,0x00,0xFF,0xFC,0x38,0x1F,0xFF,0xFF,0xFF,0xF0,0x1B,0x60,0x7F,0xFF,0xF8,0x00,0x0F,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x01,0xFB,0x60,0x0F,0xFF,0xF8,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x3F,
0xFD,0x83,0xC0,0x7F,0xF8,0x0F,0xCF,0xFF,0xFF,0xFF,0xE7,0xFF,0xFF,0xFF,0x07,0xFF,0xFD,0x87,0xE0,0x00,0x00,0x1F,0xEF,0x81,
0xFF,0xFF,0xE7,0xFF,0xFF,0xFE,0x7F,0xFC,0x1E,0xCF,0xF0,0x00,0x00,0x1F,0xE0,0x00,0xFF,0xFE,0x00,0x7F,0xFF,0xFE,0xFF,0xC7,
0xCE,0xCF,0xF0,0x00,0x00,0x1F,0xC0,0x00,0xFF,0xFE,0xE7,0x7F,0xFF,0xFE,0xF8,0x7F,0xCE,0xC7,0xEF,0xFF,0xFF,0xE7,0x9F,0xFF,
0xFF,0xFE,0x00,0x7F,0xFF,0xFF,0x73,0xFF,0xCF,0x69,0x9F,0xFF,0xFF,0xF8,0x7F,0xFF,0xFF,0xFE,0xE7,0x7F,0xFF,0xFF,0x7F,0xFF,
0xD7,0x6F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x7F,0xFF,0xFF,0xBB,0xFF,0xD7,0xB7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xE7,0xBF,0xFF,0xFF,0xBB,0xFF,0xD3,0xB7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0x9F,0xFF,0xFF,0xBB,0xFF,
0xC7,0xB7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x3F,0xFF,0xFF,0xDB,0xFC,0x4F,0xD7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDB,0x87,0x6F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x80,0x3F,0xFF,0xFF,0xE8,0x6F,
0x20,0x67,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xFC,0xFF,0xFF,0xFF,0xEF,0x77,0x36,0x67,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,
0xFF,0xFF,0xF3,0xFF,0xFF,0xFF,0xEF,0xB1,0xB6,0x67,0xBF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFE,0x00,0x3F,0xFF,0xFF,0xF6,0x37,
0xDA,0x60,0x1F,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0x9B,0xDA,0x1C,0xEF,0xFF,0xFF,0xFF,0xFF,0xD9,
0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0xDB,0xC9,0xF3,0xEF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0xDC,
0x2C,0x1B,0xDF,0xFF,0xFF,0xFF,0xFF,0xD8,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0xED,0xEC,0xFB,0x3F,0xFF,0xFF,0xFF,0xFF,0xD8,
0xFF,0xFF,0xC7,0xFF,0xFF,0xFF,0xFF,0x8C,0x76,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xFE,0x06,
0xF6,0xC1,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xF6,0xF3,0x1D,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xF7,0x03,0xB9,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xF3,
0xD8,0x7B,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x09,0xD8,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x21,0xC7,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x90,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE5,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xD8,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEC,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xD8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xEE,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};


/*******************************************************************/
/*                                                                 */
/*  延时函数                                                       */
/*                                                                 */
/*******************************************************************/
void delay(int ms)
{
    while(ms--)
	{
      uchar i;
	  for(i=0;i<150;i++)  
	   {
	    _nop_();			   
		_nop_();
		_nop_();
		_nop_();
	   }
	}
}	
/*******************************************************************/
/*                                                                 */
/*  延时函数                                                       */
/*                                                                 */
/*******************************************************************/
void delay1(int ms)
{
    while(ms--)
	{
      uchar y;
	  for(y=0;y<100;y++) ; 
	}
}			
/*******************************************************************/
/*                                                                 */
/*检查LCD忙状态                                                    */
/*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
/*                                                                 */
/*******************************************************************/
bit lcd_busy()
 {                          
    bit result;
    LCD_RS = 0;
    LCD_RW = 1;
    LCD_EN = 1;
    delayNOP();
    result = (bit)(P2&0x80);
    LCD_EN = 0;
    return(result); 
 }
/*******************************************************************/
/*                                                                 */
/*写指令数据到LCD                                                  */
/*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
/*                                                                 */
/*******************************************************************/
void lcd_wcmd(uchar cmd)
{                          
   while(lcd_busy());
    LCD_RS = 0;
    LCD_RW = 0;
    LCD_EN = 0;
    _nop_();
    _nop_(); 
    P2 = cmd;
    delayNOP();
    LCD_EN = 1;
    delayNOP();
    LCD_EN = 0;  
}
/*******************************************************************/
/*                                                                 */
/*写显示数据到LCD                                                  */
/*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
/*                                                                 */
/*******************************************************************/
void lcd_wdat(uchar dat)
{                          
   while(lcd_busy());
    LCD_RS = 1;
    LCD_RW = 0;
    LCD_EN = 0;
    P2 = dat;
    delayNOP();
    LCD_EN = 1;
    delayNOP();
    LCD_EN = 0; 
}
/*******************************************************************/
/*                                                                 */
/*  LCD初始化设定                                                  */
/*                                                                 */
/*******************************************************************/
void lcd_init()
{ 
//    LCD_PSB = 1;         //并口方式
    
	LCD_RST = 0;		 //液晶复位
    delay(3);                   
    LCD_RST = 1;      
    delay(3);
    
    lcd_wcmd(0x34);      //扩充指令操作
    delay(5);
    lcd_wcmd(0x30);      //基本指令操作
    delay(5);
    lcd_wcmd(0x0C);      //显示开，关光标
    delay(5);
    lcd_wcmd(0x01);      //清除LCD的显示内容
    delay(5);
}





/*********************************************************
*                                                        *
* 图形显示                                               *
*                                                        *
*********************************************************/
void photodisplay(uchar *bmp)	
{ 
  uchar i,j;

  lcd_wcmd(0x34);        //写数据时,关闭图形显示

  for(i=0;i<32;i++)
  {
    lcd_wcmd(0x80+i);    //先写入水平坐标值
    lcd_wcmd(0x80);      //写入垂直坐标值
    for(j=0;j<16;j++)   //再写入两个8位元的数据    
    lcd_wdat(*bmp++);     
    delay1(1);
  }

  for(i=0;i<32;i++)
  { 
    lcd_wcmd(0x80+i);
    lcd_wcmd(0x88);
    for(j=0;j<16;j++)         
	lcd_wdat(*bmp++);    
	delay1(1);
  }
  lcd_wcmd(0x36);       //写完数据,开图形显示 
}


/*********************************************************
*                                                        *
* 主函数                                                 *
*                                                        *
*********************************************************/
void main()
{
  
     lcd_init();                 //初始化LCD
  

     photodisplay(Photo1);     //显示图片1
     delay(20000);    
              
  
   
}
/*********************************************************/




