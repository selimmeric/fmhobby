//18B20单线温度检测的应用样例程序
///////////////////////////////////数码管温度显示函数
/////////////////////////共阳数码管 P1口输出数据  P3.3 P3.4 P3.5 P3.6 数码管扫描口  P3.7温度采集口
#include<REG52.H>
#include<math.h>
#include<INTRINS.H>

#define uchar unsigned char
#define uint   unsigned int;
uint t,m;
/*****************************************************************************/

sbit DQ=P3^7;//ds18b20 端口

/******emp;*/
uchar flag_get,count;//n****************************************************************/ 
uint num,minute,second;
uchar code tab[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x98};//7段数码管段码表共阳
//**************温度小数部分用查表法***********//
uchar code ditab[]=
{0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x04,0x05,0x06,0x06,0x07,0x08,0x08,0x09,0x09};
//
uchar  str[4];
/***********************************************************************/



/*************************************************************************************/
void delay(unsigned int i)//延时函数
{
 while(i--);
}



/****************DS18B20复位函数************************/
ow_reset(void)
{
char presence=1;
while(presence)
{
  while(presence)
   {
    DQ=1;//从高拉倒低
DQ=0;
delay(50);           //550 us
DQ=1;
delay(6);            //66 us
presence=DQ;         //presence=0 复位成功,继续下一步
   }
   delay(45);            //延时500 us
   presence=~DQ;
}
DQ=1;                   //拉高电平
}
//
//
/****************DS18B20写命令函数************************/
//向1-WIRE 总线上写1个字节
void write_byte(uchar val)
{
  uchar i;
  for(i=8;i>0;i--)
  {
   DQ=1;                 //从高拉倒低
   DQ=0;                  //5 us
   DQ=val&0x01;                           //最低位移出
   delay(6);                              //66 us
   val=val/2;                             //右移1位
   }
   DQ=1;
   delay(1);
}
//
/****************DS18B20读1字节函数************************/
//从总线上取1个字节
uchar read_byte(void)
{
uchar i;
uchar value=0;
for(i=8;i>0;i--)
{
  DQ=1;
  value>>=1;
  DQ=0;                                           //4 us
  DQ=1;                                         //4 us
  if(DQ)value|=0x80;
  delay(6);                                     //66 us
}
DQ=1;
return(value);
}
//
/****************读出温度函数************************/
//
read_temp()
{
unsigned char a=0;
unsigned char b=0;
  ow_reset();                  //总线复位
  delay(200);
  write_byte(0xcc);            //发命令
  write_byte(0x44);            //发转换命令
  ow_reset();
  delay(1);
  write_byte(0xcc);            //发命令
  write_byte(0xbe);
  a=read_byte();    //读温度值的第字节
  b=read_byte();    //读温度值的高字节
  t=b;
  t <<=8;
  t =t |a;  // 两字节合成一个整型变量。
  t=t>>4;
  
  m=b;
  m<<=8;
  m=m|a;
  m=m&0x0f;
  
  }
/*****************************************************************************
*  主程序													
******************************************************************************/
main()
{

TMOD=0x01;//定时器设置
TH0=(65536-5000)/256;
TL0=(65536-5000)%256;
IE=0x82;
TR0=1;

count=0;


while(1)
{


  str[3]=0xC6;//显示C符号
  str[0]=tab[t/10]; //十位
  str[1]=tab[t%100%10]&0x7f; //个位
  str[2]=tab[ditab[m]]; //小数点位

  if(flag_get==1)  //定时读取当前温度
    {
      read_temp();
      flag_get=0;
     }
  }
}



void tim(void) interrupt 1 using 1//中断，用于数码管扫描和温度检测间隔
{
TH0=(65536-5000)/256;
TL0=(65536-5000)%256;

	  flag_get=1;//标志位有效
     
      
count++;

if(count==1)
   {P3=0x08;            //数码管扫描
    P1=str[0];}
if(count==2)
   {P3=0x10;            //数码管扫描
    P1=str[1];}
if(count==3)
   { P3=0x20;           //数码管扫描
     P1=str[2];}
if(count==4)
   { P3=0x40;           //数码管扫描
     P1=str[3];
     count=0;}
}