C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/27/2012 02:06:29 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE FM_3D8_MAIN
OBJECT MODULE PLACED IN fm_3d8_main.OBJ
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE fm_3d8_main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /*------------------------------------------------------------------------------
   2          fm_3d8_main.C
   3          
   4          ------------------------------------------------------------------------------*/
   5          //#pragma SRC
   6          
   7          #include <REG52.H>                /* special function register declarations   */
   8                                            /* for the intended 8051 derivative         */
   9                                            /* is enabled                                   */
  10          
  11          #include <intrins.h>
  12          
  13          #include "fm_3d8.h"
  14          
  15          // data  = direct data : 1st 128Byte
  16          // idata = indirect data : all 256 bytes or above
  17          // code  = program memory
  18          unsigned char data mLED[8][8];                  // LED matrix
  19          unsigned char data mLED_BRIGHTNESS[8];  // LED brightness global to each layer
  20          unsigned char idata mLEDA[8][8];        // LED matrix buffer
  21          
  22          /* Timer0 interrupt routine */
  23          // 1mS interrupt
  24          void tm0_isr() interrupt 1 using 1
  25          {
  26   1      
  27   1              TR0             = 0;                            // Stop Timer1
  28   1              ET0             = 0;                            // Disable Timer1 Interrupt
  29   1              G_DISABLE                                       // Disable LED
  30   1      
  31   1      }
  32          
  33          /* Timer0 interrupt routine */
  34          // 1mS interrupt
  35          void tm1_isr() interrupt 3 using 2
  36          {
  37   1      
  38   1              static unsigned char tLayer=0;
  39   1              unsigned char i,j;
  40   1              unsigned char tByte;
  41   1              unsigned int  tmp=0;
  42   1      
  43   1              TL1     = T1MS;                         // Init Timer Lower Byte
  44   1              TH1             = T1MS >> 8;            // Init Timer Higher Byte
  45   1      
  46   1      
  47   1              TR0             = 0;
  48   1              ET0             = 0;
  49   1              SBUF = 'A';
  50   1      
  51   1              S_ENA_H         // disable output
  52   1              G_DISABLE       // Disable LED
  53   1              S_LATCH         // Latch data
  54   1              S_ENA_L         // enable output
  55   1      
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/27/2012 02:06:29 PAGE 2   

  56   1              // Set brightness of the layer
  57   1              // Pulse Width = 51 + 7 * mLED_BRIGHTNESS
  58   1      
  59   1              if (mLED_BRIGHTNESS[tLayer]!=0)
  60   1              {
  61   2                      P1 = (1<< tLayer);      // Change G
  62   2                      tmp             = 65535 - 51;
  63   2                      for (i=0; i<=6; i++)
  64   2                      {
  65   3                              tmp -= mLED_BRIGHTNESS[tLayer];
  66   3                      }
  67   2                      TL0     = tmp;                          // Init Timer Lower Byte
  68   2                      TH0             = tmp >> 8;                     // Init Timer Higher Byte
  69   2                      TR0             = 1;                            // Start Timer1
  70   2                      ET0             = 1;                            // Enable Timer1 Interrupt
  71   2              }
  72   1              else
  73   1              {
  74   2                      P1 = 0x00;
  75   2              }
  76   1      
  77   1              // Prepare next layer of data 8 * 8 bits
  78   1      
  79   1              tLayer ++;
  80   1              tLayer &= 0x07;
  81   1      
  82   1              for (i=0; i<=7; i++)
  83   1              {
  84   2                      tByte = mLED[tLayer][i];
  85   2                      for (j=0; j<=7; j++)
  86   2                      {
  87   3                              if (tByte & 0x80)
  88   3                                      S_DATA_H
  89   3                              else
  90   3                                      S_DATA_L
  91   3      
  92   3                              S_CLK
  93   3                              tByte = tByte << 1;
  94   3                              uart_rx();
  95   3                      }
  96   2              }
  97   1      
  98   1              S_DATA_L
  99   1      
 100   1              // Everything is prepared and waiting to latch out at next cycle
 101   1      
 102   1      }
 103          
 104          
 105          void uart_rx(void)
 106          {
 107   1              unsigned char tbyte;
 108   1      
 109   1              if (RI)
 110   1              {
 111   2                      RI              = 0;            // Clear UART Rx Flag
 112   2                      tbyte   = SBUF;         // Read data from UART_RX
 113   2                      SBUF    = tbyte;        // echo data back to UART_TX
 114   2              }
 115   1      
 116   1      }
 117          /*------------------------------------------------
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/27/2012 02:06:29 PAGE 3   

 118          The main C function.  Program execution starts
 119          here after stack initialization.
 120          ------------------------------------------------*/
 121          void main (void) {
 122   1      
 123   1      
 124   1      //      Init Timer0
 125   1              TMOD    |= 0x01;                        // Set Timer to 16bits mode
 126   1              TL0     = T500US;                       // Init Timer Lower Byte
 127   1              TH0             = T500US >> 8;          // Init Timer Higher Byte
 128   1              TR0             = 0;                            // Start Timer1
 129   1              ET0             = 0;                            // Enable Timer1 Interrupt
 130   1              IP              |= 0x02;                        // Set interrupt priority to 1
 131   1      
 132   1      //      Init Timer1
 133   1              TMOD    |= 0x10;                        // Set Timer to 16bits mode
 134   1              TL1     = T1MS;                         // Init Timer Lower Byte
 135   1              TH1             = T1MS >> 8;            // Init Timer Higher Byte
 136   1              TR1             = 1;                            // Start Timer1
 137   1              ET1             = 1;                            // Enable Timer1 Interrupt
 138   1      
 139   1      //      Init UART
 140   1              SCON = 0x50;                            // 8-bits UART No parity
 141   1              TL2  = RCAP2L = (65536-(FOSC/32/BAUD));
 142   1              TH2  = RCAP2H = (65536-(FOSC/32/BAUD)) >> 8;
 143   1              T2CON = 0x34;
 144   1      
 145   1      
 146   1      //      Init system variable
 147   1      
 148   1              mLED[0][0]      = 0x5A;
 149   1              mLED[0][1]  = 0xA5;
 150   1              mLED[0][2]      = 0xFF;
 151   1              mLED[0][3]      = 0x00;
 152   1              mLED[0][4]      = 0x01;
 153   1              mLED[0][5]      = 0x02;
 154   1              mLED[0][6]      = 0x03;
 155   1              mLED[0][7]      = 0x04;
 156   1      
 157   1              mLED[1][1]  = 0xff;
 158   1              mLED[2][2]  = 0xff;
 159   1              mLED[3][3]  = 0xff;
 160   1              mLED[4][4]  = 0xff;
 161   1              mLED[5][5]  = 0xff;
 162   1              mLED[6][6]  = 0xff;
 163   1              mLED[7][7]  = 0xff;
 164   1      
 165   1              mLED_BRIGHTNESS[0] = 0xF0;
 166   1              mLED_BRIGHTNESS[1] = 0xC0;
 167   1              mLED_BRIGHTNESS[2] = 0xA0;
 168   1              mLED_BRIGHTNESS[3] = 0x80;
 169   1              mLED_BRIGHTNESS[4] = 0x60;
 170   1              mLED_BRIGHTNESS[5] = 0x40;
 171   1              mLED_BRIGHTNESS[6] = 0x20;
 172   1              mLED_BRIGHTNESS[7] = 0x01;
 173   1      
 174   1      //      Enable Global Interrupt
 175   1      //      Start the system
 176   1              EA              = 1;                            // Enable Global Interrupt
 177   1      
 178   1      
 179   1              while (1) 
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/27/2012 02:06:29 PAGE 4   

 180   1              {
 181   2              P2 ^= 0x01;                         /* Toggle P1.0 each time we print */
 182   2              }
 183   1      }
 184          
 185          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    334    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     73       3
   IDATA SIZE       =     64    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
