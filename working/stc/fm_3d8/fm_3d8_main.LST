C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/28/2012 03:04:06 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE FM_3D8_MAIN
OBJECT MODULE PLACED IN fm_3d8_main.OBJ
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE fm_3d8_main.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /*------------------------------------------------------------------------------
   2          fm_3d8_main.C
   3          
   4          ------------------------------------------------------------------------------*/
   5          //#pragma SRC
   6          
   7          #include "fm_3d8.h"
   8          #define VERSION "fm-3D8 1.0 @ " __DATE__ "  " __TIME__ "\r\n"
   9          
  10          // data  = direct data : 1st 128Byte
  11          // idata = indirect data : all 256 bytes or above
  12          // code  = program memory
  13          unsigned char idata mLED[8][8];                 // LED matrix
  14          unsigned char idata mLED_BRIGHTNESS[8]; // LED brightness global to each layer
  15          //unsigned char idata mLEDA[8][8];              // LED matrix buffer
  16          unsigned char data      mTimerFlag=0;           // 100mS Flag
  17          unsigned char data  m1SCnt=0;                   // 1Sec counter
  18          unsigned char idata mRx_fifo[8];                // UART Rx Fifo
  19          unsigned char idata mRx_rd_index=0;             // read index 
  20          unsigned char idata mRx_wr_index=0;             // write index
  21          unsigned char data      mTx_Busy=0;                     // TX Flag
  22          
  23          unsigned char fifo_rd(char *iByte)
  24          {
  25   1              unsigned char tIndex;
  26   1              if (mRx_rd_index == mRx_wr_index)
  27   1                      return(0);
  28   1      
  29   1              tIndex = mRx_rd_index+1;
  30   1              if (tIndex >= sizeof(mRx_fifo))
  31   1                      tIndex = 0;
  32   1      
  33   1              mRx_rd_index = tIndex;
  34   1              *iByte = mRx_fifo[mRx_rd_index];
  35   1              return(1);
  36   1      }
  37          
  38          void fifo_wr(unsigned char iByte)
  39          {
  40   1              unsigned char tIndex;
  41   1              
  42   1              tIndex = mRx_wr_index + 1;
  43   1              if (tIndex >= sizeof(mRx_fifo))
  44   1                      tIndex = 0;
  45   1      
  46   1              if (tIndex != mRx_rd_index)
  47   1                      mRx_wr_index = tIndex;
  48   1      
  49   1              mRx_fifo[mRx_wr_index] = iByte;
  50   1      }
  51          
  52          // UART Interrupt
  53          void ISR_UART_RX(void)
  54          {
  55   1              unsigned char tByte;
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/28/2012 03:04:06 PAGE 2   

  56   1      
  57   1              if (RI)
  58   1              {
  59   2                      RI = 0;                 //      Clear Rx Flag
  60   2                      tByte = SBUF;   //      
  61   2                      fifo_wr(tByte);
  62   2              }
  63   1      
  64   1      }
  65          
  66          void Uart_Isr() interrupt 4 using 1
  67          {
  68   1      
  69   1              ISR_UART_RX();          
  70   1      
  71   1              if (TI)
  72   1              {
  73   2                      TI = 0;                 // Clear Tx Flag
  74   2                      mTx_Busy = 0;
  75   2              }
  76   1      
  77   1      }
  78          
  79          
  80          /* Timer0 interrupt routine */
  81          // 1mS interrupt
  82          void tm0_isr() interrupt 1 using 1
  83          {
  84   1      
  85   1              TR0             = 0;                            // Stop Timer1
  86   1              ET0             = 0;                            // Disable Timer1 Interrupt
  87   1              G_DISABLE                                       // Disable LED
  88   1      
  89   1      }
  90          
  91          /* Timer1 interrupt routine */
  92          // 1mS interrupt
  93          void tm1_isr() interrupt 3 using 2
  94          {
  95   1      
  96   1              static unsigned char tLayer=0;
  97   1              static unsigned char tCnt_100mS=0;
  98   1              unsigned char i,j;
  99   1              unsigned char tByte;
 100   1              unsigned int  tmp=0;
 101   1      
 102   1              // Stop Timer0
 103   1              TR0             = 0;
 104   1              ET0             = 0;
 105   1      
 106   1              // Reload Timer1
 107   1              TL1     = T1MS;                         // Init Timer Lower Byte
 108   1              TH1             = T1MS >> 8;            // Init Timer Higher Byte
 109   1              
 110   1              // Latch 1-layer LED 64bits
 111   1      
 112   1              S_ENA_H         // disable output
 113   1              G_DISABLE       // Disable LED
 114   1              S_LATCH         // Latch data
 115   1              S_ENA_L         // enable output
 116   1      
 117   1              // Set brightness of the layer
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/28/2012 03:04:06 PAGE 3   

 118   1              // Pulse Width = 51 + 7 * mLED_BRIGHTNESS
 119   1      
 120   1              if (mLED_BRIGHTNESS[tLayer]!=0)
 121   1              {
 122   2                      P1 = (1<< tLayer);                      // Change G
 123   2                      tmp             = 65535 - 51;
 124   2                      for (i=0; i<=6; i++)
 125   2                      {
 126   3                              tmp -= mLED_BRIGHTNESS[tLayer];
 127   3                      }
 128   2                      TL0     = tmp;                          // Init Timer Lower Byte
 129   2                      TH0             = tmp >> 8;                     // Init Timer Higher Byte
 130   2                      TR0             = 1;                            // Start Timer1
 131   2                      ET0             = 1;                            // Enable Timer1 Interrupt
 132   2              }
 133   1              else
 134   1              {
 135   2                      P1 = 0x00;                                      // Brightness = 0x00;
 136   2              }
 137   1      
 138   1              // Prepare next layer of data 8 * 8 bits
 139   1      
 140   1              tLayer ++;
 141   1              tLayer &= 0x07;
 142   1      
 143   1              for (i=0; i<=7; i++)
 144   1              {
 145   2                      tByte = mLED[tLayer][i];
 146   2                      for (j=0; j<=7; j++)
 147   2                      {
 148   3                              if (tByte & 0x80)
 149   3                                      S_DATA_H
 150   3                              else
 151   3                                      S_DATA_L
 152   3      
 153   3                              S_CLK
 154   3                              tByte = tByte << 1;
 155   3                              uart_rx();
 156   3                      }
 157   2              }
 158   1      
 159   1              S_DATA_L
 160   1      
 161   1              // Everything is prepared and waiting to latch out at next cycle
 162   1      
 163   1              //      Timer Flag
 164   1              tCnt_100mS ++;
 165   1              if (tCnt_100mS>=100)
 166   1                      mTimerFlag=1;
 167   1              
 168   1      }
 169          
 170          
 171          void uart_rx(void)
 172          {
 173   1              unsigned char tbyte;
 174   1      
 175   1              if (RI)
 176   1              {
 177   2                      RI              = 0;            // Clear UART Rx Flag
 178   2                      tbyte   = SBUF;         // Read data from UART_RX
 179   2                      SBUF    = tbyte;        // echo data back to UART_TX
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/28/2012 03:04:06 PAGE 4   

 180   2              }
 181   1      
 182   1      }
 183          
 184          
 185          void process_TIMER(void)
 186          {
 187   1              static unsigned char tCnt=0;
 188   1              static unsigned char tSec=0;
 189   1      
 190   1              if (mTimerFlag)                 //      100mS Flag
 191   1              {
 192   2                      tCnt ++;
 193   2                      if (tSec!=0)
 194   2                      {
 195   3      //                      u_putHexByte(tCnt,0x00);
 196   3      //                      u_puts("\r\n");
 197   3                      }
 198   2      
 199   2                      if (tCnt>=10)           // 1S
 200   2                      {
 201   3                              tCnt=0;
 202   3                              if (tSec==0)
 203   3                              {
 204   4      //                              u_puts(VERSION);
 205   4                              }
 206   3      
 207   3                              if (tSec !=0xff)
 208   3                              {
 209   4                                      tSec ++;
 210   4                              }
 211   3                      }
 212   2      
 213   2                      mTimerFlag = 0;
 214   2      
 215   2              }
 216   1      
 217   1      }
 218          
 219          void process_UART(void)
 220          {
 221   1      
 222   1      
 223   1      }
 224          
 225          /*------------------------------------------------
 226          The main C function.  Program execution starts
 227          here after stack initialization.
 228          ------------------------------------------------*/
 229          void main (void) {
 230   1      
 231   1              unsigned char i;
 232   1              unsigned char tByte;
 233   1      
 234   1      //      Init Timer0
 235   1              TMOD    |= 0x01;                        // Set Timer to 16bits mode
 236   1              TL0     = T500US;                       // Init Timer Lower Byte
 237   1              TH0             = T500US >> 8;          // Init Timer Higher Byte
 238   1              TR0             = 0;                            // Start Timer1
 239   1              ET0             = 0;                            // Enable Timer1 Interrupt
 240   1              IP              |= 0x02;                        // Set interrupt priority to 1
 241   1      
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/28/2012 03:04:06 PAGE 5   

 242   1      //      Init Timer1
 243   1              TMOD    |= 0x10;                        // Set Timer to 16bits mode
 244   1              TL1     = T1MS;                         // Init Timer Lower Byte
 245   1              TH1             = T1MS >> 8;            // Init Timer Higher Byte
 246   1              TR1             = 1;                            // Start Timer1
 247   1              ET1             = 1;                            // Enable Timer1 Interrupt
 248   1      
 249   1      //      Init UART
 250   1              SCON = 0x50;                            // 8-bits UART No parity
 251   1              TL2  = RCAP2L = (65536-(FOSC/32/BAUD));
 252   1              TH2  = RCAP2H = (65536-(FOSC/32/BAUD)) >> 8;
 253   1              T2CON = 0x34;
 254   1              ES       = 1;                                   // Enable UART interrupt
 255   1      
 256   1      //      Init system variable
 257   1      
 258   1              mLED[0][0]      = 0x5A;
 259   1              mLED[0][1]  = 0xA5;
 260   1              mLED[0][2]      = 0xFF;
 261   1              mLED[0][3]      = 0x00;
 262   1              mLED[0][4]      = 0x01;
 263   1              mLED[0][5]      = 0x02;
 264   1              mLED[0][6]      = 0x03;
 265   1              mLED[0][7]      = 0x04;
 266   1      
 267   1              mLED[1][1]  = 0xff;
 268   1              mLED[2][2]  = 0xff;
 269   1              mLED[3][3]  = 0xff;
 270   1              mLED[4][4]  = 0xff;
 271   1              mLED[5][5]  = 0xff;
 272   1              mLED[6][6]  = 0xff;
 273   1              mLED[7][7]  = 0xff;
 274   1      
 275   1              for (i=0; i<=7; i++)
 276   1              {
 277   2                      mLED_BRIGHTNESS[i] = (1<<i)+0x10;
 278   2              }
 279   1      
 280   1      
 281   1      
 282   1      //      Enable Global Interrupt
 283   1      //      Start the system
 284   1      
 285   1              EA              = 1;                            // Enable Global Interrupt
 286   1      //      u_puts(VERSION);
 287   1      
 288   1              while (1) 
 289   1              {
 290   2                      // Sync. Task : @ every 100ms
 291   2                      process_TIMER();
 292   2      
 293   2                      // Async. Task : UART
 294   2                      process_UART();
 295   2              }
 296   1      }
*** WARNING C280 IN LINE 232 OF FM_3D8_MAIN.C: 'tByte': unreferenced local variable
 297          
 298          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    486    ----
C51 COMPILER V7.06   FM_3D8_MAIN                                                           01/28/2012 03:04:06 PAGE 6   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       4
   IDATA SIZE       =     82    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
