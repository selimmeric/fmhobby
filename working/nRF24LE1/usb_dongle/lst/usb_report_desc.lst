C51 COMPILER V9.00   USB_REPORT_DESC                                                       10/24/2011 16:56:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USB_REPORT_DESC
OBJECT MODULE PLACED IN .\build\usb_report_desc.obj
COMPILER INVOKED BY: C:\KeilC51\C51\BIN\C51.EXE usb_report_desc.c LARGE OBJECTADVANCED OPTIMIZE(SIZE) BROWSE DEFINE(NRFR
                    -EADY_DEMO_MODE) DEBUG PRINT(.\lst\usb_report_desc.lst) OBJECT(.\build\usb_report_desc.obj)

line level    source

   1          /*深圳云佳科技无线应用，应用无限*/
   2          /* Copyright (c) 2008 Nordic Semiconductor. All Rights Reserved.
   3           *
   4           * The information contained herein is property of Nordic Semiconductor ASA.
   5           * Terms and conditions of usage are described in detail in NORDIC
   6           * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   7           *
   8           * Licensees are granted free, non-transferable use of the information. NO
   9           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
  10           * the file.
  11           *
  12           * $LastChangedRevision$
  13           */
  14          
  15          #include "usb_hid_desc.h"
  16          #include "usb_desc.h"
  17          
  18          //-----------------------------------------------------------------------------
  19          // Report Descriptor(s) Declarations
  20          //-----------------------------------------------------------------------------
  21          
  22          code const uint8_t g_usb_hid_report_1[HID_REPORT_DESCRIPTOR_SIZE_RC] = 
  23          {
  24             0x05, 0x0C,       //usage page(Consumer Devices)
  25             0x09, 0x01,       // usage (consumer control)
  26             0xA1, 0x01,       // collection (application)
  27                0x85, 0x01,       // reportID (0x01)
  28                
  29                0x05, 0x0C,       //usage page(Consumer Devices)
  30                0x09, 0x01,       // usage (consumer control)
  31                0xA1, 0x01,       //collection (application)
  32                  0x75, 0x10,       //Report Size (16)
  33                  0x95, 0x01,        //Report Count (1)
  34                  0x15, 0x01,       //Logical minimum (1)
  35                  0x26, 0x9C, 0x02, //Logical maximum (668)
  36                  0x19, 0x01,       //Usage Minimum (Consumer Control)
  37                  0x2A, 0x9C, 0x02, //Usage Maximum (AC Distribute Vertically)
  38                  0x81, 0x00,        //Input (Data,Array,Absolute,Bit Field)
  39                0xC0,          //End collection 
  40                 
  41                0x05, 0x01,    //Usage Page (Generic Desktop)
  42                0x09, 0x80,    //Usage (System Control)
  43                0xA1, 0x01,    //Collection (Application)
  44                   0x09, 0x82,         //Usage (Power Off)
  45                   0x09, 0x82,         //Usage (Power toggle (standby))
  46                   0x09, 0x83,         //Usage (Power On)
  47                   0x15, 0x00,       //logical minimum (0)
  48                   0x25, 0x01,       //logical maximum (1)
  49                   0x75, 0x01,       //REPORT_SIZE (1)
  50                   0x95, 0x03,       //REPORT_COUNT(3)
  51                   0x81, 0x02,         //input (Data, Variable, Absolute)
  52                   //-----Fill the Byte----//
  53                   0x75, 0x01,         //report size (1 bit)
  54                   0x95, 0x05,         //report count (5)
C51 COMPILER V9.00   USB_REPORT_DESC                                                       10/24/2011 16:56:04 PAGE 2   

  55                   0x81, 0x01,         //input (Cnst)
  56                0xC0,          //End collection 
  57                
  58                0x06, 0xBC, 0xFF, //Usage Page(Vendor Defined)
  59                0x09, 0x88,    //Usage(vendor defined)
  60                0xA1, 0x01,    //Collection (Application)
  61                  0x75, 0x08,       //Report Size (8)
  62                  0x95, 0x01,        //Report Count (1)
  63                  0x15, 0x01,       //Logical minimum (1)
  64                  0x26, 0xFF, 0x00,       //Logical maximum (255)
  65                  0x19, 0x01,       //Usage Minimum (Vendor Defined)
  66                  0x2A, 0xFF, 0x00,       //Usage Maximum (Vendor Definede)
  67                  0x81, 0x00,       //Input (Data,Array,Absolute,Bit Field)
  68                0xC0,          //End collection
  69                
  70             0xC0,           //End Collectionn
  71          
  72             0x05, 0x01,       //usage page(generic desktop)
  73             0x09, 0x06,       // usage (keyboard)
  74             0xA1, 0x01,       //collection (application)
  75                0x85, 0x02,       // reportID (0x02)
  76                0x05, 0x07,       //Usage page(keyboard)
  77                0x19, 0xE0,       //usage_min (224)       
  78                0x29, 0xE7,       //usage_max (231)       
  79                0x15, 0x00,       //logical minimum (0)
  80                0x25, 0x01,       //logical maximum (1)
  81                0x75, 0x01,       //report size (1)
  82                0x95, 0x08,       //report count(8)
  83                0x81, 0x02,       //input (Data, Variable, Absolute)
  84                0x95, 0x01,       //report count (1)
  85                0x75, 0x08,       //report size (8)
  86                0x81, 0x07,       //input (Constant)
  87                0x95, 0x06,       //report count (6)
  88                0x75, 0x08,       //report size (8)
  89                0x15, 0x00,       //logical minimum (0)
  90                0x25, 0x65,       //logical maximum (101)
  91                0x05, 0x07,       //usage page (keyboard)
  92                0x19, 0x00,       //usage minimum (0)
  93                0x29, 0x65,       //usage maximum (101)
  94                0x81, 0x00,       //input (Data, Array)
  95             0xC0              //end collection  (31+21+23+47=126 bytes)
  96          };
  97          
  98          
  99          code hal_usb_hid_t g_usb_hid_hids[] = 
 100              {
 101                  { &g_usb_conf_desc.hid1, g_usb_hid_report_1, sizeof(g_usb_hid_report_1) }
 102              };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    139    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.00   USB_REPORT_DESC                                                       10/24/2011 16:56:04 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
