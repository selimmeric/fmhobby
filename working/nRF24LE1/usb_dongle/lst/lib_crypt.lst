C51 COMPILER V9.00   LIB_CRYPT                                                             01/04/2011 17:35:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LIB_CRYPT
OBJECT MODULE PLACED IN .\build\lib_crypt.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\lib\lib_crypt\lib_crypt.c LARGE OBJECTADVANCED OPTIMIZE(SIZE) BROW
                    -SE INCDIR(..\..\..\hal\nrf24l01p;..\..\..\hal\nrf24lu1p;..\..\..\lib\assertions;..\..\..\lib\lib_crypt;..\common_setup;.
                    -.\..\..\gazell\common;..\..\..\gazell\nrf24lu1) DEFINE(NRFREADY_DEMO_MODE) DEBUG PRINT(.\lst\lib_crypt.lst) OBJECT(.\bui
                    -ld\lib_crypt.obj)

line level    source

   1          /* Copyright (c) 2008 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor. The use, copying, transfer or disclosure of such information 
   5           * is prohibited except by express written agreement with Nordic Semiconductor.
   6           */
   7          
   8          /** @file lib_crypt.c
   9           * 
  10           * This file implements the encryption library. This library can be used on both 
  11           * nRF24LU1 and nRF24LE1 and enables encryption between the two devices. 
  12           * 
  13           */
  14          
  15          #include "lib_crypt.h"
  16          
  17          #include "hal_aes.h"
  18          #include <stdint.h>
  19          
  20          /**
  21          The "aes_counter" is defined as shown below:
  22          @code
  23          15.14...                                             5..4...            ...1..0
  24          |------------------------------------------------------|-----------------------|
  25          |                 MS11B  (11 bytes)                    |    LS5B (5 bytes)     |
  26          |------------------------------------------------------|-----------------------|
  27            (never incremented)                                   (increment before encr.)
  28          
  29          *) MS11B: 11 most  significant bytes
  30          *) LS5B :  5 least significant bytes
  31          @endcode
  32          */
  33          static uint8_t xdata aes_counter[16];
  34          
  35          void lib_crypt_init(uint8_t * key, uint8_t * init_counter)
  36          {
  37   1              hal_aes_setup(false, ECB, key, NULL);
  38   1      
  39   1              if(init_counter)
  40   1              {
  41   2                      lib_crypt_set_counter(init_counter);
  42   2              }
  43   1      }
  44          
  45          void lib_crypt_set_counter(uint8_t * counter)
  46          {
  47   1              uint8_t i;
  48   1              for(i=0;i<16;i++)
  49   1              {
  50   2                      aes_counter[i] = counter[i];
  51   2              }
  52   1      }
C51 COMPILER V9.00   LIB_CRYPT                                                             01/04/2011 17:35:03 PAGE 2   

  53          
  54          void lib_crypt(uint8_t * dest_buf, uint8_t * src_buf, uint8_t length, uint8_t * ls5b_value)
  55          {
  56   1              uint8_t i;
  57   1        xdata uint8_t encr_buffer[16];   //AES buffer. Needed to do XOR
  58   1      
  59   1        //Set LS5B
  60   1              for(i=0;i<5;i++)
  61   1              {
  62   2                      aes_counter[i] = ls5b_value[i];
  63   2              }       
  64   1      
  65   1        //Run AES with aes_counter
  66   1              hal_aes_crypt(encr_buffer,aes_counter);
  67   1              
  68   1        //Encrypt data, based on XOR operation in AES counter mode.
  69   1              for(i=0;i<length; i++)
  70   1              {
  71   2                      dest_buf[i] = src_buf[i] ^ encr_buffer[i];
  72   2              }
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    228    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16      35
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
