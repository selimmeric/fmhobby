C51 COMPILER V9.00   HAL_WDOG                                                              10/03/2010 16:43:52 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HAL_WDOG
OBJECT MODULE PLACED IN .\build\hal_wdog.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\hal\nrf24le1\hal_wdog.c LARGE OBJECTADVANCED OPTIMIZE(SIZE) BROWSE
                    - INCDIR(..\..\..\hal\nrf24l01p;..\..\..\hal\nrf24lu1p;..\..\..\lib\assertions;..\..\..\lib\lib_crypt;..\common_setup;..\
                    -..\..\gazell\common;..\..\..\gazell\nrf24lu1) DEFINE(NRFREADY_DEMO_MODE) DEBUG PRINT(.\lst\hal_wdog.lst) OBJECT(.\build\
                    -hal_wdog.obj)

line level    source

   1          /* Copyright (c) 2008 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is property of Nordic Semiconductor ASA.
   4           * Terms and conditions of usage are described in detail in NORDIC
   5           * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *
  11           * $LastChangedRevision: 4760 $
  12           */ 
  13          
  14          /** @file
  15            * @brief Implementation of hal_wdog
  16           */
  17          
  18          #include <stdint.h>
  19          #include <stdbool.h>
  20          
  21          #include <Nordic\reg24le1.h>
  22          #include "nordic_common.h"
  23          #include "hal_wdog.h"
  24          
  25          void hal_wdog_init(uint16_t start_value)
  26          {
  27   1        WDSV = LSB(start_value);      // Write the 8 LSB to the WD counter
  28   1        WDSV = MSB(start_value);      // Write the 8 MSB to the WD counter
  29   1      }
  30          
  31          void hal_wdog_restart(void)
  32          {
  33   1        uint8_t wd_msb, wd_lsb;
  34   1      
  35   1        wd_lsb = WDSV;
  36   1        wd_msb = WDSV;
  37   1      
  38   1        WDSV = wd_lsb;           // Write the 8 LSB to the WD counter
  39   1        WDSV = wd_msb;           // Write the 8 MSB to the WD counter
  40   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     18    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.00   HAL_WDOG                                                              10/03/2010 16:43:52 PAGE 2   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
