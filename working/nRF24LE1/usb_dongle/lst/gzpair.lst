C51 COMPILER V9.00   GZPAIR                                                                01/04/2011 18:03:54 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE GZPAIR
OBJECT MODULE PLACED IN .\build\gzpair.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\gazell\common\gzpair.c LARGE OBJECTADVANCED OPTIMIZE(SIZE) BROWSE 
                    -INCDIR(..\..\..\hal\nrf24l01p;..\..\..\hal\nrf24lu1p;..\..\..\lib\assertions;..\..\..\lib\lib_crypt;..\common_setup;..\.
                    -.\..\gazell\common;..\..\..\gazell\nrf24lu1) DEFINE(NRFREADY_DEMO_MODE) DEBUG PRINT(.\lst\gzpair.lst) OBJECT(.\build\gzp
                    -air.obj)

line level    source

   1          /* Copyright (c) 2009 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is property of Nordic Semiconductor ASA.
   4           * Terms and conditions of usage are described in detail in NORDIC
   5           * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *
  11           * $LastChangedRevision$
  12           */
  13          
  14          /** @file
  15           * @brief Implementation of common Device/Host functions for the Gazell Pairing Library.
  16           */
  17          
  18          #include "gzpair.h"
  19          void gzpair_generate_channels(uint8_t* ch_dst, uint8_t* p1_address, uint8_t channel_tab_size)
  20          {
  21   1        uint8_t xdata binsize, spacing, i;
  22   1      
  23   1        binsize = (GZPAIR_PAIRING_CHANNEL_MAX - GZPAIR_PAIRING_CHANNEL_MIN) / channel_tab_size;
  24   1      
  25   1        ch_dst[0] = GZPAIR_PAIRING_CHANNEL_LOW;
  26   1        ch_dst[channel_tab_size - 1] = GZPAIR_PAIRING_CHANNEL_HIGH;
  27   1      
  28   1        for(i = 1; i < (channel_tab_size - 1); i++)
  29   1        {
  30   2          ch_dst[i] = (binsize * i) + (p1_address[(i % 4) + 1] % binsize);  
  31   2        }
  32   1      
  33   1        for(i = 1; i < channel_tab_size; i++)
  34   1        {
  35   2          spacing = (ch_dst[i] - ch_dst[i - 1]); 
  36   2          if(spacing < GZPAIR_CHANNEL_SPACING_MIN)
  37   2          {
  38   3            ch_dst[i] += (GZPAIR_CHANNEL_SPACING_MIN - spacing); 
  39   3          }
  40   2        } 
  41   1      } 
  42          
  43          void gzpair_xor_chipher(uint8_t* dst, uint8_t* src)
  44          {
  45   1        uint8_t i;
  46   1        xdata uint8_t key[] = GZPAIR_XOR_CHIPER_KEY;
  47   1        for(i = 0; i < 16; i++)
  48   1        {
  49   2          *(dst + i) = *(src + i) ^ key[i];   
  50   2        }
  51   1      }                      

C51 COMPILER V9.00   GZPAIR                                                                01/04/2011 18:03:54 PAGE 2   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
